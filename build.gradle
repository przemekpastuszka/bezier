apply plugin: 'idea'
apply plugin: 'java'

repositories {
  flatDir dirs: "${rootDir}/lib"
  mavenCentral()
}

configurations {
    antTask
}

sourceCompatibility = '1.7'

dependencies {
  compile 'org.apache.commons:commons-lang3:3.1'
  compile 'com.google.guava:guava:14.0.1'
  compile 'com.google.inject:guice:3.0'
  compile 'org.apache.commons:commons-math3:3.2'
  compile name: 'forms_rt', version: '12.1.2'

  antTask name: 'javac2', version: '12.1.2'
  antTask name: 'asm4-all', version: '12.1.2-idea'
  antTask group: 'org.jdom', name: 'jdom', version: '1.1'

  testCompile 'org.mockito:mockito-all:1.9.5'
  testCompile 'org.easytesting:fest-assert:1.4'
  testCompile 'junit:junit:4.11'
}

// creates fat jar with all dependencies
// not very pretty or KISS, but makes app easier to distribute
jar {
    dependsOn configurations.runtime
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }

    manifest {
        attributes 'Main-Class': 'pl.rtshadow.bezier.gui.MainWindow'
    }
}

// we need specialized task to compile UI generated by intellij
// this is a snippet taken from: http://grahamedgecombe.com/blog/using-intellij-ideas-javac2-in-gradle
compileJava {
    doLast {
        project.sourceSets.main.output.classesDir.mkdirs()
        ant.taskdef name: 'javac2', classname: 'com.intellij.ant.Javac2', classpath: configurations.antTask.asPath
        ant.javac2 srcdir: project.sourceSets.main.java.srcDirs.join(':'),
            classpath: project.sourceSets.main.compileClasspath.asPath,
            destdir: project.sourceSets.main.output.classesDir,
            source: sourceCompatibility,
            target: targetCompatibility,
            includeAntRuntime: false
    }
}